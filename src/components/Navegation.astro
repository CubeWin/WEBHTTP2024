---
interface Items {
    navItem: string
    icon: string
}

interface Props {
    navList: Array<Items>
}
const { navList } = Astro.props
---

<header
    class='fixed w-full z-30 bg-black/10 backdrop-blur-md text-white transition-all ease-in-out duration-500
    hover:bg-white hover:bg-opacity-10'
>
    <nav
        class='mx-auto flex container max-w-7xl items-center justify-between px-6 py-3 lg:px-8'
        aria-label='Global'
    >
        <div class='flex lg:flex-1'>
            <a class='-m-1.5 p-1.5 flex gap-4 items-center'>
                <img
                    class='h-8 w-auto'
                    src='./liu.cube.svg'
                    alt='Logo imagen'
                    style='height: 50px'
                />
                <span class='not-sr-only font-["Audiowide"] text-2xl'>LiU Cube</span>
            </a>
        </div>
        <div class='flex lg:hidden'>
            <button
                type='button'
                id='btnOpenNavMob'
                class='-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 hover:bg-sky-100 hover:bg-opacity-30'
            >
                <span class='sr-only'>Open main menu</span>
                <svg
                    class='h-6 w-6'
                    fill='none'
                    viewBox='0 0 24 24'
                    stroke-width='1.5'
                    stroke='currentColor'
                    aria-hidden='true'
                >
                    <path
                        stroke-linecap='round'
                        stroke-linejoin='round'
                        d='M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5'></path>
                </svg>
            </button>
        </div>
        <div class='hidden lg:flex lg:gap-x-12'>
            {
                navList.length > 0 &&
                    navList.map((item) => (
                        <a
                            href={`#${item.navItem}`}
                            class='font-semibold leading-6 rounded-md hover:bg-slate-950 border-b-2
                            border-transparent transition-all ease-in-out duration-300 text-md uppercase
                            hover:bg-opacity-10 hover:border-b-2 hover:border-white p-5'
                        >
                            {item.icon && <i class={`fa ${item.icon} mr-1`} />}
                            {item.navItem}
                        </a>
                    ))
            }
        </div>
    </nav>
    <div
        class='fixed z-20 w-full h-screen top-0 -right-full overflow-hidden lg:hidden
        transition-all duration-500 ease-in-out'
        id='navMobile'
        role='dialog'
        aria-modal='true'
    >
        <div
            id='bgNav'
            class='absolute inset-0 z-10 transition-colors duration-700 ease-in-out bg-opacity-50 backdrop-blur-sm'
        >
        </div>
        <div
            class='absolute inset-y-0 right-0 z-10 w-full overflow-y-auto sm:max-w-sm sm:ring-1 sm:ring-gray-900/10
            bg-gradient-to-b from-[#0067bc]/90 via-[#324482]/90 to-[#0a0813]/90'
        >
            <div
                class='flex items-center justify-between px-6 shadow-lg shadow-[#0a0813]/10 py-6'
            >
                <a href='#' class='-m-1.5 p-1.5'>
                    <span class='sr-only'>Your Company</span>
                    <img
                        class='h-8 w-auto'
                        src='./liu.cube.svg'
                        alt='logo icon'
                    />
                </a>
                <button
                    type='button'
                    id='btnCloseNavMob'
                    class='-m-2.5 rounded-md p-2.5 text-white hover:bg-black/10'
                >
                    <span class='sr-only'>Close menu</span>
                    <svg
                        class='h-6 w-6'
                        fill='none'
                        viewBox='0 0 24 24'
                        stroke-width='1.5'
                        stroke='currentColor'
                        aria-hidden='true'
                    >
                        <path
                            stroke-linecap='round'
                            stroke-linejoin='round'
                            d='M6 18L18 6M6 6l12 12'></path>
                    </svg>
                </button>
            </div>
            <div class='mt-6 flow-root px-6 pb-6'>
                <div class='-my-6 divide-y divide-gray-300/10'>
                    <div class='space-y-2 py-6'>
                        {
                            navList.length > 0 &&
                                navList.map((item) => (
                                    <a
                                        class='-mx-3 block rounded-lg px-3 py-2 text-base font-semibold leading-7
                                        text-white hover:bg-black/10 uppercase cursor-pointer'
                                        ref-button={item.navItem}
                                    >
                                        {item.icon && (
                                            <i class={`fa ${item.icon} mr-1`} />
                                        )}
                                        {item.navItem}
                                    </a>
                                ))
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</header>
<script>
    function openNavMob() {
        document.getElementById('navMobile')?.classList.add('!right-0')
        document.getElementById('bgNav')?.classList.add('bg-gray-600')
    }

    function closeNavMob() {
        document.getElementById('navMobile')?.classList.remove('!right-0')
        document.getElementById('bgNav')?.classList.remove('bg-gray-600')
    }

    document
        .getElementById('btnOpenNavMob')
        ?.addEventListener('click', openNavMob)

    document
        .getElementById('btnCloseNavMob')
        ?.addEventListener('click', closeNavMob)

    document.querySelectorAll('[ref-button]').forEach(function (item) {
        item.addEventListener('click', function () {
            const url = item.getAttribute('ref-button')
            console.log('click execute', url)
            window.location.href = `#${url}`
            closeNavMob()
        })
    })
</script>
